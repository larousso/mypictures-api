akka.http.session {
  cookie {
    name = "_sessiondata"
    domain = none
    path = /
    secure = false
    http-only = true
  }
}
akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  loglevel = "INFO"
  stdout-loglevel = "DEBUG"

  actor {
    serializers {
      account = "com.adelegue.mypictures.domains.account.AccountSerialize"
      album = "com.adelegue.mypictures.domains.album.AlbumSerialize"
      picture = "com.adelegue.mypictures.domains.picture.PictureSerialize"
      comment = "com.adelegue.mypictures.domains.comment.CommentSerialize"
    }

    serialization-bindings {
      "com.adelegue.mypictures.domains.account.Accounts$AccountAdded" = account
      "com.adelegue.mypictures.domains.album.Albums$AlbumCreated" = album
      "com.adelegue.mypictures.domains.album.Albums$AlbumUpdated" = album
      "com.adelegue.mypictures.domains.album.Albums$AlbumDeleted" = album
      "com.adelegue.mypictures.domains.album.Albums$PictureAdded" = album
      "com.adelegue.mypictures.domains.album.Albums$PictureRemoved" = album
      "com.adelegue.mypictures.domains.picture.Pictures$PictureCreated" = picture
      "com.adelegue.mypictures.domains.picture.Pictures$PictureUpdated" = picture
      "com.adelegue.mypictures.domains.picture.Pictures$PictureDeleted" = picture
      "com.adelegue.mypictures.domains.comment.Comments$CommentCreated" = comment
      "com.adelegue.mypictures.domains.comment.Comments$CommentUpdated" = comment
      "com.adelegue.mypictures.domains.comment.Comments$CommentDeleted" = comment
    }
  }
}

  akka.http.client.parsing.max-content-length = 83886080

  akka.persistence.journal.plugin = "akka.persistence.journal.leveldb"
  akka.persistence.snapshot-store.plugin = "akka.persistence.snapshot-store.local"

